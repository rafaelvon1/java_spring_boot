name: 🤖 Gemini Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 🐍 Instalar dependências Python
        run: |
          python3 -m pip install --upgrade pip
          pip install google-generativeai PyGithub

      - name: 🤖 Rodar análise com Gemini 1.5 Flash
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          python3 <<'EOF'
          import os
          from github import Github
          import google.generativeai as genai

          # 🔑 Configurações da API Gemini
          genai.configure(api_key=os.getenv("GEMINI_API_KEY"))
          model = genai.GenerativeModel("gemini-1.5-flash")

          # 🧠 Dados do PR
          repo_name = os.getenv("GITHUB_REPOSITORY")
          ref = os.getenv("GITHUB_REF")

          # Em PRs o ref vem no formato refs/pull/{num}/merge
          pr_number = int(ref.split("/")[2])
          g = Github(os.getenv("GITHUB_TOKEN"))
          repo = g.get_repo(repo_name)
          pr = repo.get_pull(pr_number)

          print(f"🔍 Analisando PR #{pr_number} de {repo_name}")

          # 📄 Monta diffs
          diffs = ""
          for f in pr.get_files():
              if f.patch:
                  diffs += f"### {f.filename}\n```diff\n{f.patch}\n```\n\n"

          # ✍️ Gera prompt
          prompt = f"""
          Faça um code review técnico e detalhado para este Pull Request.
          Identifique:
          - Problemas de lógica, performance ou segurança
          - Sugestões de melhoria e boas práticas
          - Pontos de documentação e clareza de código

          Analise cada trecho abaixo:

          {diffs}
          """

          # 🚀 Chamada ao Gemini
          response = model.generate_content(prompt)
          review_text = response.text or "⚠️ Nenhum feedback gerado."

          # 💬 Posta comentário no PR
          pr.create_issue_comment(f"### 🤖 Review automático Gemini\n\n{review_text}")

          print("✅ Review postado com sucesso!")
          EOF
